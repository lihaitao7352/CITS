1. 実行計画の確認
EXPLAIN PLANコマンドを使用して、クエリの実行計画を取得します。これにより、OracleがどのようにSQL文を処理しているか、
テーブルへのアクセス方法、インデックスの使用状況、結合方法などが分かります。
実行計画取得のSQL文
EXPLAIN PLAN FOR
-- ここにクエリ①またはクエリ②を入力
;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);
-- ここにクエリ①またはクエリ②を入力の部分を具体的なクエリに置き換え、
出力された実行計画を確認します。特にCost（コスト）、Cardinality（カーディナリティ）、Bytes（バイト数）などの指標に注意し、
フルテーブルスキャン（FULL TABLE SCAN）やインデックス使用（INDEX RANGE SCAN、INDEX UNIQUE SCANなど）の有無を確認します。
==========================================================================================================================
2. 実行中のセッションのモニタリング
クエリが実行中の場合、V$SESSIONおよびV$SQLビューを使用して、クエリの実行状況をモニタリングできます。
実行中のSQLのモニタリング
SELECT s.sid, s.serial#, s.username, t.sql_id, sql_text
FROM v$session s
JOIN v$sql t ON s.sql_id = t.sql_id
WHERE s.type <> 'BACKGROUND';
このクエリは、バックグラウンド以外のすべてのセッションで実行されているSQL文をリストアップします。クエリ①またはクエリ②のsql_idを見つけ、さらに分析します。
==========================================================================================================================
3. リソース使用状況の確認
長時間実行されるクエリの場合、特にCPUとI/Oの使用状況を確認すると良いでしょう。
特定のSQLのリソース使用状況
SELECT * FROM v$sqlarea WHERE sql_id = 'あなたのsql_id';
'あなたのsql_id'を上記のクエリから得られたSQL IDに置き換えてください。
これにより、そのSQLの実行回数、パース回数、総実行時間、CPU時間、物理読み取り回数などの情報が提供されます。
==========================================================================================================================
4. SQL最適化の提案
Oracleの自動SQLチューニング機能、例えばSQLチューニングアドバイザーを使用して、パフォーマンスの向上につながる提案を得ることができます。
SQLチューニングの提案の開始
DBA権限が必要ですが、以下のように実行できます：
DECLARE
  l_task_id VARCHAR2(100);
BEGIN
  l_task_id := DBMS_SQLTUNE.CREATE_TUNING_TASK(sql_id = 'あなたのsql_id');
  DBMS_SQLTUNE.EXECUTE_TUNING_TASK(task_name = l_task_id);
  DBMS_OUTPUT.PUT_LINE('Task ID: ' || l_task_id);
END;
/
その後、チューニング提案を確認できます：
SELECT DBMS_SQLTUNE.REPORT_TUNING_TASK('あなたのtask_id') AS recommendations FROM dual;

==========================================================================================================================
